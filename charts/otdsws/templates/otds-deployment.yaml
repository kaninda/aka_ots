{{- if eq .Values.enabled true }}
{{- $customsecretname := default .Values.global.existingSecret .Values.customSecretName -}}
########################################################################
# OpenText Directory Services (OTDS)
########################################################################
{{- if eq .Values.statefulSet true }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
apiVersion: apps/v1
metadata:
  name: {{ template "otdsws.name" . }}
{{- if .Values.global.namespace }}
  namespace: {{ .Values.global.namespace }}
{{- end }}
  labels:
    app.kubernetes.io/component: {{ .Chart.Name }}
    {{- include (printf "%s%s" .Chart.Name ".labels" ) . | nindent 4 }}
spec:
{{- if eq .Values.statefulSet true }}
  serviceName: {{ template "otdsws.service" . }}
{{- end }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      {{- include "getExtraPodMatchLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.vault.agentInjector }}
        vault.hashicorp.com/agent-inject: 'true'
      {{- if .Values.vault.namespace }}
        vault.hashicorp.com/namespace: {{ .Values.vault.namespace }}
      {{- end }}
        vault.hashicorp.com/auth-path: {{ .Values.vault.authpath }}
        vault.hashicorp.com/role: {{ .Values.vault.role }}
        vault.hashicorp.com/agent-cache-enable: 'true'
      {{- if .Values.vault.proxyAddress }}
        vault.hashicorp.com/proxy-address: {{ .Values.vault.proxyAddress }}
      {{- end }}
      {{- end }}
      labels:
        app.kubernetes.io/component: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- include "getExtraPodMatchLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.securityContextOverride }}
      securityContext: {{ toYaml .Values.securityContextOverride | nindent 8 }}
      {{- else }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion }}
        seccompProfile:
          type: RuntimeDefault
{{- end }}
        runAsNonRoot: true
        {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- with .Values.tolerations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- with .Values.topologySpreadConstraints }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      initContainers:
        {{- range .Values.initContainers }}
        - name: {{ .name }}
          image: {{ printf "%s/%s:%s" .image.source .image.name .image.tag }}
          imagePullPolicy: {{ $.Values.global.imagePullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
          command:
          - cp
          - -r
          - /otdsws
          - /opt/config/customfiles
          volumeMounts:
          - name: {{ template "otdsws.name" $ }}-customfiles-volume
            mountPath: /opt/config/customfiles
        {{- end }}
{{- if .Values.otdsdb.automaticDatabaseCreation.enabled }}
        - name: init-db
          image: {{ include "db.image" . }}
          imagePullPolicy: {{ default .Values.global.pullPolicy .Values.otdsdb.automaticDatabaseCreation.dbImage.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
          env:
          - name: DB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
{{- if $customsecretname }}
                name: {{ $customsecretname }}
{{- else }}
                name: {{ template "otdsws.name" . }}-secrets
{{- end }}
                key: OTDS_DB_ADMIN_PASSWORD
          - name: DB_NAME
            value: {{ template "otdsdb.url.name" . }}
          - name: DB_ADMIN_DB
            value: {{ default "postgres" .Values.global.database.adminDatabase }}
          - name: DB_ADMIN
            value: {{ required "A valid otdsws.otdsdb.automaticDatabaseCreation.dbAdmin is required!" ( default  ( default "postgres" .Values.global.database.adminUsername ) .Values.otdsdb.automaticDatabaseCreation.dbAdmin )}}
          - name: DB_USER
            valueFrom:
              secretKeyRef:
{{- if $customsecretname }}
                name: {{ $customsecretname }}
{{- else }}
                name: {{ template "otdsws.name" . }}-secrets
{{- end }}
                key: OTDS_JAKARTA_PERSISTENCE_JDBC_USER
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
{{- if $customsecretname }}
                name: {{ $customsecretname }}
{{- else }}
                name: {{ template "otdsws.name" . }}-secrets
{{- end }}
                key: OTDS_JAKARTA_PERSISTENCE_JDBC_PASSWORD
          - name: DB_EXTENSIONS
            value: {{ template "otdsdb.extensions" . }}
          - name: DB_TYPE
            value: {{ template "otdsdb.url.type" . }}
          - name: DB_HOST
            value: {{ template "otdsdb.url.host" . }}
          - name: DB_PORT
            value: {{ template "otdsdb.url.port" . }}
{{- if .Values.otdsdb.useDefaultSchema }}
          - name: USEDEFAULTSCHEMA
            value: "true"
{{- end }}
          command:
          - bash
          args:
          - /scripts/init-db.sh
          volumeMounts:
          - name: scripts-vol
            mountPath: /scripts
{{- end }}
      volumes:
        - name: {{ template "otdsws.name" . }}-temp-volume
          emptyDir: {}
        - name: {{ template "otdsws.name" . }}-logs-volume
          emptyDir: {}
        - name: {{ template "otdsws.name" . }}-work-volume
          emptyDir: {}
{{- if .Values.pvc.enabled }}
        - name: {{ template "otdsws.name" . }}-otds-data-volume
          persistentVolumeClaim:
            claimName: {{ template "otdsws.name" . }}-pvc
{{- end }}
{{- if .Values.vault.enabled }}
        - name: {{ template "otdsws.name" . }}-vault-token
          projected:
            sources:
            - serviceAccountToken:
                path: vault-token
                expirationSeconds: 7200
{{- if .Values.vault.tokenAudience }}
                audience: {{ .Values.vault.tokenAudience }}
{{- end }}
{{- end }}
{{- if and .Values.migration.enabled .Values.migration.usingLegacyImage (not .Values.migration.preUpgradeJob.enabled) }}
        - name: {{ template "otdsws.name" . }}-legacy-image-volume
          persistentVolumeClaim:
            claimName: {{ .Values.migration.legacyImagePVC }}
{{- end }}
{{- if eq .Values.enableBootstrapConfig true }}
        - name: {{ template "otdsws.name" . }}-bootstrap-volume
          secret:
            secretName: {{ template "otdsws.name" . }}-bootstrap
{{- end }}
{{- if eq .Values.kerberos.enabled true }}
        - name: {{ template "otdsws.name" . }}-kerberos-volume
          secret:
            secretName: {{ template "otdsws.name" . }}-kerberos
{{- end }}
{{- if eq .Values.enableCustomizedTruststore true }}
        - name: {{ template "otdsws.name" . }}-certs-volume
          secret:
            secretName: {{ template "otdsws.name" . }}-certs
        - name: {{ template "otdsws.name" . }}-truststore-volume
          emptyDir: {}
{{- end }}
{{- if .Values.initContainers }}
        - name: {{ template "otdsws.name" . }}-customfiles-volume
          emptyDir: {}
{{- end }}
{{- if .Values.otdsdb.automaticDatabaseCreation.enabled }}
        - name: scripts-vol
          configMap:
            name: {{ template "initdb.script" . }}
{{- end }}
      serviceAccountName: {{ default .Values.global.serviceAccountName .Values.serviceAccountName }}
      containers:
      - name: {{ template "otdsws.name" . }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
        envFrom:
        - configMapRef:
            name: {{ template "otdsws.name" . }}-configmap
        env:
{{- if (not .Values.vault.enabled) }}
        - name: OTDS_K8S_SECRET_NAME
{{- if $customsecretname }}
          value: {{ $customsecretname }}
{{- else }}
          value: {{ template "otdsws.name" . }}-secrets
{{- end }}
{{- end }}
        volumeMounts:
          - name: {{ template "otdsws.name" . }}-temp-volume
            mountPath: /opt/tomcat/temp
          - name: {{ template "otdsws.name" . }}-logs-volume
            mountPath: /opt/tomcat/logs
          - name: {{ template "otdsws.name" . }}-work-volume
            mountPath: /opt/tomcat/work
{{- if .Values.pvc.enabled }}
          - name: {{ template "otdsws.name" . }}-otds-data-volume
            mountPath: /opt/otdsdata
{{- end }}
{{- if .Values.vault.enabled }}
          - name: {{ template "otdsws.name" . }}-vault-token
            mountPath: /var/run/secrets/tokens
{{- end }}
{{- if and .Values.migration.enabled .Values.migration.usingLegacyImage (not .Values.migration.preUpgradeJob.enabled) }}
          - name: {{ template "otdsws.name" . }}-legacy-image-volume
            mountPath: /opt/otds
{{- end }}
{{- if eq .Values.enableBootstrapConfig true }}
          - name: {{ template "otdsws.name" . }}-bootstrap-volume
            mountPath: /opt/config/bootstrap
{{- end }}
{{- if eq .Values.kerberos.enabled true }}
          - name: {{ template "otdsws.name" . }}-kerberos-volume
            mountPath: /opt/config/kerberos
{{- end }}
{{- if eq .Values.enableCustomizedTruststore true }}
          - name: {{ template "otdsws.name" . }}-certs-volume
            mountPath: /opt/config/certificates
          - name: {{ template "otdsws.name" . }}-truststore-volume
            mountPath: /opt/config/truststore
{{- end }}
{{- if .Values.initContainers }}
          - name: {{ template "otdsws.name" . }}-customfiles-volume
            mountPath: /opt/config/customfiles
{{- end }}
        readinessProbe:
          httpGet:
            path: {{ template "otdsws.path" . }}/health/readiness
            port: {{ .Values.targetPort }}
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: {{ template "otdsws.path" . }}/health/liveness
            port: {{ .Values.targetPort }}
          periodSeconds: 10
          timeoutSeconds: 5
{{- if semverCompare "<1.18-0" .Capabilities.KubeVersion.GitVersion }}
          initialDelaySeconds: 240
{{- end }}
{{- if semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion }}
        startupProbe:
          httpGet:
            path: {{ template "otdsws.path" . }}/health/liveness
            port: {{ .Values.targetPort }}
          periodSeconds: 10
          failureThreshold: 24
{{- end }}
        image: {{ include "otds.image" . }}
        imagePullPolicy: {{ default .Values.global.imagePullPolicy .Values.image.pullPolicy }}
{{- if (eq (default .Values.global.resourceRequirements .Values.resources.enabled) true) }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
{{- end }}
        ports:
        - containerPort: {{ .Values.targetPort }}
      hostname: {{ .Values.hostname }}
{{- if (default .Values.global.imagePullSecret .Values.image.pullSecret) }}
      imagePullSecrets:
      - name: {{ default .Values.global.imagePullSecret .Values.image.pullSecret }}
{{- end }}
{{- end }}