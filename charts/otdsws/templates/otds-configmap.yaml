apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "otdsws.name" . }}-configmap
{{- if .Values.global.namespace }}
  namespace: {{ .Values.global.namespace }}
{{- end }}
  labels:
    {{- include (printf "%s%s" .Chart.Name ".labels" ) . | nindent 4 }}
data:
  OTDS_OTDSWS_CONTAINER: "true"
  OTDS_JAKARTA_PERSISTENCE_JDBC_URL: {{ template "otdsws.dburl" . }}
{{- if eq .Values.migration.enabled true }}
{{- if .Values.migration.preUpgradeJob.enabled }}
  OTDS_MIGRATE: "false"
{{- else }}
  OTDS_MIGRATE: "true"
{{- end }}
{{- if eq .Values.migration.usingLegacyImage true }}
  LEGACY_OPENDJ: "true"
{{- else }}
{{- if .Values.migration.opendjUri }}
  OTDS_DIRECTORY_BOOTSTRAP_SERVERLIST: {{ .Values.migration.opendjUri }}
{{- else }}
  OTDS_DIRECTORY_BOOTSTRAP_SERVERLIST: {{ printf "ldap://%s" .Values.migration.serviceName }}:{{ .Values.migration.servicePort }}
{{- end }}
{{- end }}
{{- end }}
{{- if .Values.additionalJavaOpts }}
  CATALINA_OPTS: {{ .Values.additionalJavaOpts }}
{{- end }}
{{- if .Values.ingress.prependPath }}
  APP_PATH: {{ .Values.ingress.prependPath }}
{{- end }}
  SAPSYSTEMCLIENT: "001"
  SAPSYSTEMNAME: OTX
{{- if .Values.newrelic.NEW_RELIC_LICENSE_KEY }}
{{ toYaml .Values.newrelic | indent 2 }}
{{- end }}
  TZ: {{ default .Values.global.timeZone .Values.timeZone }}
  OTDS_DIRECTORY_BOOTSTRAP_ELECTMASTER: "true"
{{- if eq .Values.otdsdb.useDefaultSchema true }}
  OTDS_USEDEFAULTDBSCHEMA: "true"
{{- end }}
{{- if eq .Values.allowDuplicateUsers true }}
  OTDS_REPO_ALLOWDUPLICATEUSERS: "true"
{{- end }}
{{- if eq .Values.allowNonIndexedSearch true }}
  OTDS_REPO_ALLOWNONINDEXEDSEARCH: "true"
{{- end }}
{{- if .Values.systemGlobalOAuthClients }}
  OTDS_DIRECTORY_SYSTEM_GLOBALOAUTHCLIENTS: {{ .Values.systemGlobalOAuthClients }}
{{- end }}
{{- if eq .Values.enableCustomizedTruststore true }}
  OTDS_CUSTOMTRUSTSTORE: "true"
{{- end }}
{{- if .Values.vault.enabled }}
{{- if .Values.vault.namespace }}
  VAULT_NAMESPACE: {{ .Values.vault.namespace }}
{{- end }}
{{- if .Values.vault.authpath }}
  VAULT_AUTHPATH: {{ .Values.vault.authpath }}
{{- end }}
{{- if .Values.vault.agentInjector }}
  VAULT_AGENT_ENABLED: "true"
{{- end }}
  VAULT_URL: {{ required "Vault URL must be specified" .Values.vault.url }}
  VAULT_ROLE: {{ required "Vault role must be specified" .Values.vault.role }}
  VAULT_SECRETS_PATH: {{ required "Vault secretsPath must be specified" .Values.vault.secretsPath }}
{{- if eq .Values.vault.useDynamicDbSecret true }}
  VAULT_DYNAMIC_DB_CREDS: "true"
  VAULT_DB_MOUNT_PATH: {{ .Values.vault.dbBackendMountPath }}
  VAULT_DB_ROLE_NAME: {{ .Values.vault.dbBackendRole }}
{{- end }}
{{- end }}
  OTDS_REPO_TENANTIMPORTEXPORTPATH: "/opt/otdsdata/tenantdata"
{{- if .Values.logging.logToFiles }}
  OTDS_LOGTOFILES: "true"
{{- else }}
  OTDS_LOGTOFILES: "false"
{{- end }}
{{- if and .Values.logging.logToFiles .Values.logging.logToPVC }}
  OTDS_LOGFILES_PATH: "/opt/otdsdata/logs/${HOSTNAME}"
{{- else }}
  OTDS_LOGFILES_PATH: "/opt/tomcat/logs"
{{- end }}
{{- if and .Values.logging.logRequests .Values.logging.logToFiles }}
  ENABLE_ACCESSLOG_FILES: "true"
  ENABLE_ACCESSLOG_STDOUT: "true"
{{- else if .Values.logging.logRequests }}
  ENABLE_ACCESSLOG_FILES: "false"
  ENABLE_ACCESSLOG_STDOUT: "true"
{{- else }}
  ENABLE_ACCESSLOG_FILES: "false"
  ENABLE_ACCESSLOG_STDOUT: "false"
{{- end }}
---